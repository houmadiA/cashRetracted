<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:annotation-config />
	<context:component-scan base-package="dao,model,controller,metier" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean -->
		<property name="dataSource" ref="datasource" />
		<property name="annotatedClasses">
			<list>
				<value>model.Transaction</value>
				<value>model.User</value>
				<value>model.Compte</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/cashretracted" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<!-- partie batch -->

	<bean id="transactionReaderCSV" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="/raw/transactonsLog.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names" value="idtransaction,idCompte,montant,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="model.TransactionIn" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>

	<batch:job id="importTransactions" job-repository="jobRepository">
		<batch:step id="readWriteTransaction">
			<batch:tasklet>
				<batch:chunk reader="transactionReaderCSV" processor="transactionProcessor"
					writer="tansactionWriter" commit-interval="3" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<task:scheduled-tasks scheduler="mySch">
		<task:scheduled ref="batchLauncher" method="run"
			cron=" 5 * * * * * " />
	</task:scheduled-tasks>
	
	<task:scheduler id="mySch"/>

	<task:annotation-driven />
	<tx:annotation-driven/>

</beans>
